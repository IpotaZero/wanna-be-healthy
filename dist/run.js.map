{"version":3,"mappings":"ksCAAO,MAAMA,CAAO,CAChB,OAAO,QAAQC,EAAuC,CAClD,OAAAA,EAAU,MAAM,WAAa,eAC7BA,EAAU,MAAM,QAAU,IAC1BA,EAAU,MAAM,cAAgB,OAEzB,KAAK,MAAM,GAAG,CACzB,CAEA,aAAa,OAAOA,EAAwB,CACxCA,EAAU,MAAM,WAAa,eAC7BA,EAAU,MAAM,QAAU,IAE1B,MAAM,KAAK,MAAM,GAAG,EAEpBA,EAAU,MAAM,cAAgB,KACpC,CAEA,OAAO,MAAMC,EAAY,CACrB,OAAO,IAAI,QAAeC,GAAY,CAClC,WAAWA,EAASD,CAAE,CAC1B,CAAC,CACL,CACJ,CCpBO,MAAME,CAAO,CAChB,MAAOC,GAEP,OAAO,KAAKC,EAAmB,CAC3B,KAAKD,GAAgBC,CACzB,CAEA,aAAa,KACTC,EACA,CACI,YAAAC,EAAc,KAAKC,GACnB,YAAAC,EAAc,KAAKC,EAAA,EACqC,GAC9D,CACE,KAAKN,GAAc,MAEnB,MAAMJ,EAAY,SAAS,eAAe,WAAW,EAErD,MAAMD,EAAO,QAAQC,CAAS,EAE9B,IAAIW,EAAO,GACPC,EAAS,GAGbb,EAAO,MAAM,GAAI,EAAE,KAAK,IAAM,CACrBY,IACDJ,EAAA,EACAK,EAAS,GAEjB,CAAC,EAED,KAAKR,GAAgBE,EAAA,EACrB,MAAM,KAAKF,GAAc,MACzBO,EAAO,GAEHC,GACAH,EAAA,EAGJ,MAAMV,EAAO,OAAOC,CAAS,CACjC,CAEA,MAAOQ,IAAe,CAClB,MAAMK,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,YAAc,aAChBA,EAAE,UAAU,IAAI,SAAS,EACzB,SAAS,KAAK,YAAYA,CAAC,CAC/B,CAEA,MAAOH,IAAe,CAClB,SAAS,iBAAiB,UAAU,EAAE,QAAS,GAAM,EAAE,QAAQ,CACnE,CACJ,CCvDO,MAAMI,CAAM,CACf,OAAO,YAAc,GAErB,OAAO,SAAW,CACd,YAAa,IACb,gBAAiB,IACjB,WAAY,IACZ,UAAW,GAAmB,EAGlC,OAAO,MAAQ,CACX,SAAU,CAAE,EAAG,EAAG,EAAG,GACrB,YAAa,IACb,UAAW,IACX,SAAU,IACV,UAAW,GAAqB,EAGpC,OAAO,WAAa,CAChB,UAAW,GACX,YAAa,GACb,YAAa,IAGjB,MAAOC,GAAe,GAKtB,OAAO,MAAO,CACV,GAAI,KAAKA,GAAc,MAAM,IAAI,MAAM,+BAA+B,EACtE,KAAKA,GAAe,GAEpB,SAAS,iBAAiB,cAAgB,IAEtC,EAAE,iBACF,EAAE,kBACK,GACV,EAED,SAAS,iBAAiB,UAAY,GAAM,CACxC,GAAI,EAAE,OAAS,MAEX,SAAE,iBACF,EAAE,kBACK,EAEf,CAAC,EAGD,SAAS,iBAAiB,cAAe,KAAKC,GAAkB,KAAK,IAAI,EAAG,CAAE,QAAS,GAAO,EAC9F,SAAS,iBAAiB,cAAe,KAAKC,GAAiB,KAAK,IAAI,EAAG,CAAE,QAAS,GAAO,EAC7F,SAAS,iBAAiB,eAAgB,KAAKC,GAAgB,KAAK,IAAI,EAAG,CAAE,QAAS,GAAO,EAC7F,SAAS,iBAAiB,gBAAiB,KAAKA,GAAgB,KAAK,IAAI,EAAG,CAAE,QAAS,GAAO,EAG9F,SAAS,iBAAiB,UAAW,KAAKC,GAAe,KAAK,IAAI,CAAC,EACnE,SAAS,iBAAiB,QAAS,KAAKC,GAAa,KAAK,IAAI,CAAC,EAG/D,OAAO,iBAAiB,OAAQ,KAAKC,GAAY,KAAK,IAAI,CAAC,EAC3D,OAAO,iBAAiB,QAAS,KAAKC,GAAa,KAAK,IAAI,CAAC,EAC7D,SAAS,iBAAiB,mBAAoB,KAAKC,GAAwB,KAAK,IAAI,CAAC,CACzF,CAKA,OAAO,QAAS,CACP,KAAKR,IAAc,QAAQ,MAAM,2BAA2B,EAEjE,KAAK,SAAS,YAAY,QAC1B,KAAK,SAAS,OAAO,QACrB,KAAK,SAAS,MAAM,QAEpB,KAAK,MAAM,QAAQ,QACnB,KAAK,MAAM,MAAM,QAEjB,KAAK,WAAW,YAAc,GAC9B,KAAK,WAAW,YAAc,GAEzB,KAAK,cACN,KAAK,MAAM,KAAK,QAChB,KAAK,SAAS,QAAQ,QAE9B,CAEA,MAAOI,GAAe,EAAkB,CAC/B,KAAK,cAEL,KAAK,SAAS,QAAQ,IAAI,EAAE,IAAqB,GAClD,KAAK,SAAS,OAAO,IAAI,EAAE,IAAqB,EAGpD,KAAK,SAAS,QAAQ,IAAI,EAAE,IAAqB,EACjD,KAAK,SAAS,YAAY,IAAI,EAAE,IAAqB,EACzD,CAEA,MAAOC,GAAa,EAAkB,CAC7B,KAAK,cAEV,KAAK,SAAS,QAAQ,OAAO,EAAE,IAAqB,EACpD,KAAK,SAAS,MAAM,IAAI,EAAE,IAAqB,EACnD,CAEA,MAAOJ,GAAkB,EAAiB,CACjC,KAAK,cAIV,KAAK,MAAM,KAAK,IAAI,MAAM,EAC1B,KAAK,MAAM,QAAQ,IAAI,MAAM,EAC7B,KAAKQ,GAAA,EACT,CAEA,MAAOP,GAAiB,EAAiB,CAChC,KAAK,WAQd,CAEA,MAAOC,GAAgB,EAAiB,CAC/B,KAAK,cAEV,KAAK,MAAM,KAAK,OAAO,MAAM,EAC7B,KAAK,MAAM,MAAM,IAAI,MAAM,EAC/B,CAEA,MAAOM,IAAuB,CAC1B,KAAK,MAAM,MAAM,QAGjB,KAAM,CAAE,EAAAC,EAAG,EAAAC,CAAA,EAAM,KAAK,MAAM,SACtBC,EAAQ,OAAO,WACfC,EAAS,OAAO,YAElBH,EAAIE,EAAQ,OAAQ,MAAM,MAAM,IAAI,MAAM,EACrCF,EAAKE,EAAQ,EAAK,QAAQ,MAAM,MAAM,IAAI,OAAO,EAEtDD,EAAIE,EAAS,OAAQ,MAAM,MAAM,IAAI,IAAI,EACpCF,EAAKE,EAAS,EAAK,QAAQ,MAAM,MAAM,IAAI,MAAM,EAGtDH,GAAKE,EAAQ,GAAKF,GAAME,EAAQ,EAAK,GAAKD,GAAKE,EAAS,GAAKF,GAAME,EAAS,EAAK,GACjF,KAAK,MAAM,MAAM,IAAI,QAAQ,CAErC,CAEA,MAAOP,IAAc,CACjB,QAAQ,IAAI,UAAU,EACtB,KAAK,WAAW,UAAY,GAC5B,KAAK,WAAW,YAAc,EAClC,CAEA,MAAOC,IAAe,CAClB,QAAQ,IAAI,UAAU,EACtB,KAAK,WAAW,UAAY,GAC5B,KAAK,WAAW,YAAc,EAClC,CAEA,MAAOC,IAA0B,CACzB,SAAS,kBAAoB,UAC7B,KAAKD,GAAA,EAEL,KAAKD,GAAA,CAEb,CACJ,EAEiBP,GAAV,CAIUA,EAAA,aAAe,CAAC,OAAQ,SAAU,QAAS,OAAQ,SAAS,EAC5DA,EAAA,KAAO,CAChB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,YACA,YACA,aACA,QACA,SACA,YACA,MACA,QACA,YACA,aACA,cACA,eACA,UACA,WACA,WACA,YACA,WACA,UACA,aACA,SACA,SACA,OACA,MACA,SACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,cACA,QACA,eAGSA,EAAA,WAAa,CAAC,OAAQ,QAAS,KAAM,OAAQ,QAAQ,IArFrDA,MAAA,KAyFV,KAAM,CAAE,SAAAe,EAAU,WAAAC,EAAY,MAAAC,GAAUjB,ECvQxC,MAAMkB,UAAe,WAAY,CACpCC,GAEAC,GAAK,EACLC,GAEA,MAAQ,IAAM,CAAC,EAEf,aAAc,CACV,QAEA,KAAKA,GAAQ,KAAK,UAClB,KAAK,UAAY,GAEjB,KAAKF,GAAY,YAAY,KAAKG,GAAQ,KAAK,IAAI,EAAG,IAAO,EAAE,CACnE,CAEAA,IAAU,CACN,KAAK,WAAa,KAAKD,GAAM,KAAKD,IAAI,GAAK,GAEvC,KAAKA,IAAM,KAAKC,GAAM,SACtB,KAAK,QACL,cAAc,KAAKF,EAAS,EAEpC,CACJ,CAEA,eAAe,OAAO,WAAYD,CAAM,ECrBxC,SAAS,iBAAiB,mBAAoB,SAAY,CACtDlB,EAAM,OAEN,KAAM,CAAE,WAAAuB,CAAA,EAAe,2CAAM,QAAO,iCAAwB,OAAAC,KAAA,qBAAAD,CAAA,uBAE5DlC,EAAO,KAAK,IAAIkC,CAAY,CAChC,CAAC","names":["Awaits","container","ms","resolve","Scenes","#currentScene","firstScene","newScene","showLoading","#showLoading","hideLoading","#hideLoading","done","showed","p","Input","#initialized","#handleTouchStart","#handleTouchMove","#handleTouchEnd","#handleKeyDown","#handleKeyUp","#handleBlur","#handleFocus","#handleVisibilityChange","#handleMousePosition","x","y","width","height","keyboard","focusState","mouse","Typing","#interval","#i","#text","#update","SceneTitle","n"],"ignoreList":[],"sources":["../src/utils/Awaits.ts","../src/Scenes/Scenes.ts","../src/utils/Input.ts","../src/utils/Typing.ts","../src/run.ts"],"sourcesContent":["export class Awaits {\r\n    static fadeOut(container: HTMLElement): Promise<void> {\r\n        container.style.transition = \"opacity 0.2s\"\r\n        container.style.opacity = \"0\"\r\n        container.style.pointerEvents = \"none\"\r\n\r\n        return this.sleep(200)\r\n    }\r\n\r\n    static async fadeIn(container: HTMLElement) {\r\n        container.style.transition = \"opacity 0.2s\"\r\n        container.style.opacity = \"1\"\r\n\r\n        await this.sleep(200)\r\n\r\n        container.style.pointerEvents = \"all\"\r\n    }\r\n\r\n    static sleep(ms: number) {\r\n        return new Promise<void>((resolve) => {\r\n            setTimeout(resolve, ms)\r\n        })\r\n    }\r\n}\r\n","import { Awaits } from \"../utils/Awaits.js\"\r\nimport { Scene } from \"./Scene.js\"\r\n\r\nexport class Scenes {\r\n    static #currentScene: Scene\r\n\r\n    static init(firstScene: Scene) {\r\n        this.#currentScene = firstScene\r\n    }\r\n\r\n    static async goto(\r\n        newScene: () => Scene,\r\n        {\r\n            showLoading = this.#showLoading,\r\n            hideLoading = this.#hideLoading,\r\n        }: { showLoading?: () => void; hideLoading?: () => void } = {},\r\n    ) {\r\n        this.#currentScene.end()\r\n\r\n        const container = document.getElementById(\"container\")!\r\n\r\n        await Awaits.fadeOut(container)\r\n\r\n        let done = false\r\n        let showed = false\r\n\r\n        // 1秒タイマーを並行実行\r\n        Awaits.sleep(1000).then(() => {\r\n            if (!done) {\r\n                showLoading() // ローディング画面表示\r\n                showed = true\r\n            }\r\n        })\r\n\r\n        this.#currentScene = newScene()\r\n        await this.#currentScene.ready // メイン処理実行\r\n        done = true // 1秒以内に終わればローディングは表示されない\r\n\r\n        if (showed) {\r\n            hideLoading()\r\n        }\r\n\r\n        await Awaits.fadeIn(container)\r\n    }\r\n\r\n    static #showLoading() {\r\n        const p = document.createElement(\"p\")\r\n        p.textContent = \"Loading...\"\r\n        p.classList.add(\"loading\")\r\n        document.body.appendChild(p)\r\n    }\r\n\r\n    static #hideLoading() {\r\n        document.querySelectorAll(\".loading\").forEach((e) => e.remove())\r\n    }\r\n}\r\n","export class Input {\r\n    static isAvailable = true\r\n\r\n    static keyboard = {\r\n        pressed: new Set<Input.KeyCode>(),\r\n        longPressed: new Set<Input.KeyCode>(),\r\n        pushed: new Set<Input.KeyCode>(),\r\n        upped: new Set<Input.KeyCode>(),\r\n    }\r\n\r\n    static mouse = {\r\n        position: { x: 0, y: 0 },\r\n        clicked: new Set<Input.MouseButton>(),\r\n        upped: new Set<Input.MouseButton>(),\r\n        down: new Set<Input.MouseButton>(),\r\n        about: new Set<Input.Direction>(),\r\n    }\r\n\r\n    static focusState = {\r\n        isFocused: true,\r\n        justFocused: false,\r\n        justBlurred: false,\r\n    }\r\n\r\n    static #initialized = false\r\n\r\n    /**\r\n     * 最初に呼んでくれ\r\n     */\r\n    static init() {\r\n        if (this.#initialized) throw new Error(\"Input is already initialized!\")\r\n        this.#initialized = true\r\n\r\n        document.addEventListener(\"contextmenu\", (e) => {\r\n            // 右クリックメニューを無効化\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            return false\r\n        })\r\n\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if (e.code === \"Tab\") {\r\n                // Tabキーのデフォルト動作を無効化\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n                return false\r\n            }\r\n        })\r\n\r\n        // Touch events (for mobile)\r\n        document.addEventListener(\"pointerdown\", this.#handleTouchStart.bind(this), { passive: false })\r\n        document.addEventListener(\"pointermove\", this.#handleTouchMove.bind(this), { passive: false })\r\n        document.addEventListener(\"pointerleave\", this.#handleTouchEnd.bind(this), { passive: false })\r\n        document.addEventListener(\"pointercancel\", this.#handleTouchEnd.bind(this), { passive: false })\r\n\r\n        // Keyboard events\r\n        document.addEventListener(\"keydown\", this.#handleKeyDown.bind(this))\r\n        document.addEventListener(\"keyup\", this.#handleKeyUp.bind(this))\r\n\r\n        // Window focus events\r\n        window.addEventListener(\"blur\", this.#handleBlur.bind(this))\r\n        window.addEventListener(\"focus\", this.#handleFocus.bind(this))\r\n        document.addEventListener(\"visibilitychange\", this.#handleVisibilityChange.bind(this))\r\n    }\r\n\r\n    /**\r\n     * 毎フレームの最後に呼んでくれ\r\n     */\r\n    static update() {\r\n        if (!this.#initialized) console.error(\"Input is not initialized!\")\r\n\r\n        this.keyboard.longPressed.clear()\r\n        this.keyboard.pushed.clear()\r\n        this.keyboard.upped.clear()\r\n\r\n        this.mouse.clicked.clear()\r\n        this.mouse.upped.clear()\r\n\r\n        this.focusState.justFocused = false\r\n        this.focusState.justBlurred = false\r\n\r\n        if (!this.isAvailable) {\r\n            this.mouse.down.clear()\r\n            this.keyboard.pressed.clear()\r\n        }\r\n    }\r\n\r\n    static #handleKeyDown(e: KeyboardEvent) {\r\n        if (!this.isAvailable) return\r\n\r\n        if (!this.keyboard.pressed.has(e.code as Input.KeyCode)) {\r\n            this.keyboard.pushed.add(e.code as Input.KeyCode)\r\n        }\r\n\r\n        this.keyboard.pressed.add(e.code as Input.KeyCode)\r\n        this.keyboard.longPressed.add(e.code as Input.KeyCode)\r\n    }\r\n\r\n    static #handleKeyUp(e: KeyboardEvent) {\r\n        if (!this.isAvailable) return\r\n\r\n        this.keyboard.pressed.delete(e.code as Input.KeyCode)\r\n        this.keyboard.upped.add(e.code as Input.KeyCode)\r\n    }\r\n\r\n    static #handleTouchStart(e: PointerEvent) {\r\n        if (!this.isAvailable) return\r\n\r\n        // this.mouse.position.x = e.target.clientX\r\n        // this.mouse.position.y = touch.clientY\r\n        this.mouse.down.add(\"left\")\r\n        this.mouse.clicked.add(\"left\")\r\n        this.#handleMousePosition()\r\n    }\r\n\r\n    static #handleTouchMove(e: PointerEvent) {\r\n        if (!this.isAvailable) return\r\n\r\n        // if (e.touches.length > 0) {\r\n        //     const touch = e.touches[0]\r\n        //     this.mouse.position.x = touch.clientX\r\n        //     this.mouse.position.y = touch.clientY\r\n        //     this.#handleMousePosition()\r\n        // }\r\n    }\r\n\r\n    static #handleTouchEnd(e: PointerEvent) {\r\n        if (!this.isAvailable) return\r\n\r\n        this.mouse.down.delete(\"left\")\r\n        this.mouse.upped.add(\"left\")\r\n    }\r\n\r\n    static #handleMousePosition() {\r\n        this.mouse.about.clear()\r\n\r\n        // クリック位置によって方向を pressing に追加\r\n        const { x, y } = this.mouse.position\r\n        const width = window.innerWidth\r\n        const height = window.innerHeight\r\n\r\n        if (x < width / 3) this.mouse.about.add(\"left\")\r\n        else if (x > (width * 2) / 3) this.mouse.about.add(\"right\")\r\n\r\n        if (y < height / 3) this.mouse.about.add(\"up\")\r\n        else if (y > (height * 2) / 3) this.mouse.about.add(\"down\")\r\n\r\n        // center: x, y が中央1/3領域にある場合\r\n        if (x >= width / 3 && x <= (width * 2) / 3 && y >= height / 3 && y <= (height * 2) / 3) {\r\n            this.mouse.about.add(\"center\")\r\n        }\r\n    }\r\n\r\n    static #handleBlur() {\r\n        console.log(\"よそ見するにゃ!\")\r\n        this.focusState.isFocused = false\r\n        this.focusState.justBlurred = true\r\n    }\r\n\r\n    static #handleFocus() {\r\n        console.log(\"こっち見んにゃ!\")\r\n        this.focusState.isFocused = true\r\n        this.focusState.justFocused = true\r\n    }\r\n\r\n    static #handleVisibilityChange() {\r\n        if (document.visibilityState === \"visible\") {\r\n            this.#handleFocus()\r\n        } else {\r\n            this.#handleBlur()\r\n        }\r\n    }\r\n}\r\n\r\nexport namespace Input {\r\n    export type MouseButton = (typeof Input.mouseButtons)[number]\r\n    export type KeyCode = (typeof Input.keys)[number]\r\n\r\n    export const mouseButtons = [\"left\", \"middle\", \"right\", \"back\", \"forward\"] as const\r\n    export const keys = [\r\n        \"KeyA\",\r\n        \"KeyB\",\r\n        \"KeyC\",\r\n        \"KeyD\",\r\n        \"KeyE\",\r\n        \"KeyF\",\r\n        \"KeyG\",\r\n        \"KeyH\",\r\n        \"KeyI\",\r\n        \"KeyJ\",\r\n        \"KeyK\",\r\n        \"KeyL\",\r\n        \"KeyM\",\r\n        \"KeyN\",\r\n        \"KeyO\",\r\n        \"KeyP\",\r\n        \"KeyQ\",\r\n        \"KeyR\",\r\n        \"KeyS\",\r\n        \"KeyT\",\r\n        \"KeyU\",\r\n        \"KeyV\",\r\n        \"KeyW\",\r\n        \"KeyX\",\r\n        \"KeyY\",\r\n        \"KeyZ\",\r\n        \"Digit0\",\r\n        \"Digit1\",\r\n        \"Digit2\",\r\n        \"Digit3\",\r\n        \"Digit4\",\r\n        \"Digit5\",\r\n        \"Digit6\",\r\n        \"Digit7\",\r\n        \"Digit8\",\r\n        \"Digit9\",\r\n        \"ArrowUp\",\r\n        \"ArrowDown\",\r\n        \"ArrowLeft\",\r\n        \"ArrowRight\",\r\n        \"Enter\",\r\n        \"Escape\",\r\n        \"Backspace\",\r\n        \"Tab\",\r\n        \"Space\",\r\n        \"ShiftLeft\",\r\n        \"ShiftRight\",\r\n        \"ControlLeft\",\r\n        \"ControlRight\",\r\n        \"AltLeft\",\r\n        \"AltRight\",\r\n        \"MetaLeft\",\r\n        \"MetaRight\",\r\n        \"CapsLock\",\r\n        \"NumLock\",\r\n        \"ScrollLock\",\r\n        \"Insert\",\r\n        \"Delete\",\r\n        \"Home\",\r\n        \"End\",\r\n        \"PageUp\",\r\n        \"PageDown\",\r\n        \"F1\",\r\n        \"F2\",\r\n        \"F3\",\r\n        \"F4\",\r\n        \"F5\",\r\n        \"F6\",\r\n        \"F7\",\r\n        \"F8\",\r\n        \"F9\",\r\n        \"F10\",\r\n        \"F11\",\r\n        \"F12\",\r\n        \"ContextMenu\",\r\n        \"Pause\",\r\n        \"PrintScreen\",\r\n    ] as const\r\n\r\n    export const directions = [\"left\", \"right\", \"up\", \"down\", \"center\"] as const\r\n    export type Direction = (typeof directions)[number]\r\n}\r\n\r\nexport const { keyboard, focusState, mouse } = Input\r\n","export class Typing extends HTMLElement {\r\n    #interval: number\r\n\r\n    #i = 0\r\n    #text\r\n\r\n    onEnd = () => {}\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.#text = this.innerText\r\n        this.innerText = \"\"\r\n\r\n        this.#interval = setInterval(this.#update.bind(this), 1000 / 30)\r\n    }\r\n\r\n    #update() {\r\n        this.innerText += this.#text[this.#i++] ?? \"\"\r\n\r\n        if (this.#i >= this.#text.length) {\r\n            this.onEnd()\r\n            clearInterval(this.#interval)\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define(\"i-typing\", Typing)\r\n","import { Scenes } from \"./Scenes/Scenes\"\r\nimport { Input } from \"./utils/Input\"\r\nimport { Typing } from \"./utils/Typing\"\r\n\r\nTyping\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    Input.init()\r\n\r\n    const { SceneTitle } = await import(\"./Scenes/SceneTitle.js\")\r\n\r\n    Scenes.init(new SceneTitle())\r\n})\r\n"],"file":"run.js"}